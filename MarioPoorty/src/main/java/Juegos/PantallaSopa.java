/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Juegos;

import Modelos.Random;
import Modelos.TiposPalabraSopaLetras;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import Modelos.ThreadTiempoSopa;
/**
 *
 * @author Proyecto Dise√±o
 */


public class PantallaSopa extends javax.swing.JFrame implements ActionListener{
	private int[] tamanos = {10,15,20};
	private int tamanoSopa;
	private int tamanoBoton;
	private int tamanoLetra;
	private int[][] tableroLogico;
	private JButton[][] tableroGUI;
	private ArrayList<String> listaPalabras = new ArrayList<String>();
	private String[] palabrasBuscar = new String[4];
	private String buscandoPalabra = "";
	private boolean jugando;
	private int palabrasCorrectas;
	private String abecedario[] = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S","T", "U", "V", "W", "X", "Y", "Z"};
	private ThreadTiempoSopa threadTiempoSopa;
	private boolean perdio;
	
	
	public PantallaSopa() {
		initComponents();
		ponerPalabrasEnLista();
		
		threadTiempoSopa = new ThreadTiempoSopa(this);
		threadTiempoSopa.start();
		
		iniciarGUIBotones();
		ponerPalabrasEnTablero();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlSopa = new javax.swing.JPanel();
        lblPalabra1 = new javax.swing.JLabel();
        lblPalabra2 = new javax.swing.JLabel();
        lblPalabra3 = new javax.swing.JLabel();
        lblPalabra4 = new javax.swing.JLabel();
        btnInsertar = new javax.swing.JToggleButton();
        jLabel5 = new javax.swing.JLabel();
        lblTiempo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlSopa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        javax.swing.GroupLayout pnlSopaLayout = new javax.swing.GroupLayout(pnlSopa);
        pnlSopa.setLayout(pnlSopaLayout);
        pnlSopaLayout.setHorizontalGroup(
            pnlSopaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 706, Short.MAX_VALUE)
        );
        pnlSopaLayout.setVerticalGroup(
            pnlSopaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 706, Short.MAX_VALUE)
        );

        lblPalabra1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblPalabra1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        lblPalabra2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblPalabra2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        lblPalabra3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblPalabra3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        lblPalabra4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblPalabra4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        btnInsertar.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        btnInsertar.setText("Insertar");
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Tiempo");

        lblTiempo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTiempo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTiempo.setText("[tiempo]");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlSopa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPalabra1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPalabra2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPalabra3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPalabra4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnInsertar, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(lblPalabra1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblPalabra2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblPalabra3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblPalabra4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(btnInsertar, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(156, 156, 156)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlSopa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	public void setCronometroTiempo(String text){
		lblTiempo.setText(text);
		if(threadTiempoSopa.isTermino()){
			JOptionPane.showMessageDialog(this, "Se te acabo el tiempo","Pierdes", 0);
			perdio = true;
            jugando=false;
            this.setVisible(false);
		}
	}
	
    private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarActionPerformed
		for (String palabraBuscar : palabrasBuscar) {
			if(revisarSiCorrecto(palabraBuscar, buscandoPalabra)){
				palabraCorrecta();
				if(palabrasCorrectas==4){
					JOptionPane.showMessageDialog(null, "Ganaste!", "Winner",1);
					jugando=false;
                    this.setVisible(false);
					perdio = false;
					threadTiempoSopa.parar();
				}
				buscandoPalabra = "";
				return;
			} 
		}
		buscandoPalabra = "";
		palabraIncorrecta();
		
    }//GEN-LAST:event_btnInsertarActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(PantallaSopa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(PantallaSopa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(PantallaSopa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(PantallaSopa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new PantallaSopa().setVisible(true);
			}
		});
	}
	
	private void iniciarGUIBotones(){
		tamanoSopa = tamanos[Random.randomInt(0, 2)];
		tableroGUI = new JButton[tamanoSopa][tamanoSopa];
		ponerTamanoBotonYLetra();
		
		for (int i = 0; i < tamanoSopa; i++) {
			for (int j = 0; j < tamanoSopa; j++) {
				tableroGUI[i][j] = new JButton();
				JButton boton = tableroGUI[i][j];
				boton.setFont(new java.awt.Font("Segoe UI", 0, tamanoLetra));
				boton.addActionListener(this);
				
				pnlSopa.add(boton);
				boton.setBackground(new Color(255,255,255));
				boton.setText(abecedario[Random.randomInt(0, 25)]);
				
				boton.setBounds(tamanoBoton*i, tamanoBoton*j,tamanoBoton,tamanoBoton);
			}
		}
	}
	
	private void ponerPalabrasEnTablero(){
		int palabra1X;
		int palabra1Y;
		
		int palabra2X;
		int palabra2Y;
		
		int palabra3X;
		int palabra3Y;
		
		int palabra4X;
		int palabra4Y;
		
		if(tamanoSopa==10){
			palabra1X = Random.randomInt(0, 2);
			palabra1Y = 9;
		
			palabra2X = Random.randomInt(0, 2);
			palabra2Y = 0;
		
			palabra3X = Random.randomInt(0, 2);
			palabra3Y = Random.randomInt(0, 2);
		
			palabra4X = Random.randomInt(0, 2);
			palabra4Y = Random.randomInt(0, 2);
		} else if(tamanoSopa==15){
			palabra1X = Random.randomInt(0, 8);
			palabra1Y = 9;
		
			palabra2X = Random.randomInt(0, 8);
			palabra2Y = 0;
		
			palabra3X = Random.randomInt(0, 8);
			palabra3Y = Random.randomInt(0, 8);
		
			palabra4X = Random.randomInt(0, 8);
			palabra4Y = Random.randomInt(0, 8);
		} else{
			palabra1X = Random.randomInt(0, 13);
			palabra1Y = 9;
		
			palabra2X = Random.randomInt(0, 13);
			palabra2Y = 0;
		
			palabra3X = Random.randomInt(0, 13);
			palabra3Y = Random.randomInt(0, 13);
		
			palabra4X = Random.randomInt(0, 13);
			palabra4Y = Random.randomInt(0, 13);
		}
		
		tableroLogico = new int[20][20];
		for (int col = 0; col < tamanoSopa; col++) {
			for (int fila = 0; fila < tamanoSopa; fila++) {
				tableroLogico[col][fila] = 0;
			}
		}
		
		Collections.shuffle(listaPalabras);
		String palabra1 = listaPalabras.get(0);
		String palabra2 = listaPalabras.get(1);
		String palabra3 = listaPalabras.get(2);
		String palabra4 = listaPalabras.get(3);
		
		palabrasBuscar[0] = palabra1;
		palabrasBuscar[1] = palabra2;
		palabrasBuscar[2] = palabra3;
		palabrasBuscar[3] = palabra4;
		
		while(verSiNoHayOtraPalabra(palabra1.length(),palabra1X, palabra1Y, TiposPalabraSopaLetras.HORIZONTAL)){
			palabra1X = 0;
			palabra1Y = Random.randomInt(0, tamanoSopa-7);
		}
		for (int n = 0; n < palabra1.length(); n++) {
			tableroLogico[palabra1X][palabra1Y] = 1;
			String letra = String.valueOf(palabra1.charAt(n));
			tableroGUI[palabra1X][palabra1Y].setText(letra);
			palabra1X++;
        }
		
		while(verSiNoHayOtraPalabra(palabra2.length(),palabra2X, palabra2Y, TiposPalabraSopaLetras.VERTICAL)){
			palabra2X = Random.randomInt(0, tamanoSopa-7);
			palabra2Y = 0;
		}
		for (int n = 0; n < palabra2.length(); n++) {
			tableroLogico[palabra2X][palabra2Y] = 2;
			String letra = String.valueOf(palabra2.charAt(n));
			tableroGUI[palabra2X][palabra2Y].setText(letra);
			palabra2Y++;
        }
		
		while(verSiNoHayOtraPalabra(palabra3.length(),palabra3X, palabra3Y, TiposPalabraSopaLetras.DIAGONAL)){
			palabra3X = Random.randomInt(0, tamanoSopa-7);
			palabra3Y = Random.randomInt(0, tamanoSopa-7);
		}
		for (int n = 0; n < palabra3.length(); n++) {
			tableroLogico[palabra3X][palabra3Y] = 3;
			String letra = String.valueOf(palabra3.charAt(n));
			tableroGUI[palabra3X][palabra3Y].setText(letra);
			palabra3X++;
			palabra3Y++;
        }
		
		while(verSiNoHayOtraPalabra(palabra4.length(),palabra4X, palabra4Y, TiposPalabraSopaLetras.DIAGONAL)){
			palabra4X = Random.randomInt(0, tamanoSopa-7);
			palabra4Y = Random.randomInt(0, tamanoSopa-7);
		}
		for (int n = 0; n < palabra4.length(); n++) {
			tableroLogico[palabra4X][palabra4Y] = 4;
			String letra = String.valueOf(palabra4.charAt(n));
			tableroGUI[palabra4X][palabra4Y].setText(letra);
			palabra4X++;
			palabra4Y++;
        }
		
		
		lblPalabra1.setText(palabra1);
		lblPalabra2.setText(palabra2);
		lblPalabra3.setText(palabra3);
		lblPalabra4.setText(palabra4);
	}
	
	private void ponerPalabrasEnLista(){
		listaPalabras.add("CASAS"); listaPalabras.add("GATOS"); listaPalabras.add("PERRO"); listaPalabras.add("CIELO"); listaPalabras.add("SUELO");
		listaPalabras.add("FLORES"); listaPalabras.add("TIGRES"); listaPalabras.add("JARDIN"); listaPalabras.add("VENTAS"); listaPalabras.add("EDIFICO");
		listaPalabras.add("PALABO"); listaPalabras.add("CUERDO"); listaPalabras.add("IMAGEN"); listaPalabras.add("PAPEL"); listaPalabras.add("PLANTAS");
		listaPalabras.add("FRENTE"); listaPalabras.add("PUESTO"); listaPalabras.add("CONEXO"); listaPalabras.add("CLARO"); listaPalabras.add("JUEGOS");
		listaPalabras.add("DIVINO"); listaPalabras.add("SUERTE"); listaPalabras.add("FUERTE"); listaPalabras.add("CAMBIO"); listaPalabras.add("PLAZAS");
		listaPalabras.add("ESPEJO"); listaPalabras.add("VENTAS"); listaPalabras.add("PLAZOS"); listaPalabras.add("PLATOS"); listaPalabras.add("PASTOS");
		listaPalabras.add("PENADO"); listaPalabras.add("REVISA"); listaPalabras.add("CARTEL"); listaPalabras.add("RUIDOS"); listaPalabras.add("MATRIZ");
		listaPalabras.add("JUEGOS"); listaPalabras.add("RUMOR"); listaPalabras.add("PRISAS"); listaPalabras.add("CALMA"); listaPalabras.add("ESPIRA");
		listaPalabras.add("CIELOS"); listaPalabras.add("RAMAS"); listaPalabras.add("HOGAR"); listaPalabras.add("RADIOS"); listaPalabras.add("CUBO");
		listaPalabras.add("VUELOS"); listaPalabras.add("RAICES"); listaPalabras.add("CUERPO"); listaPalabras.add("PISOS"); listaPalabras.add("FUTURO");
		listaPalabras.add("PASADO"); listaPalabras.add("PUEBLO"); listaPalabras.add("HEROES"); listaPalabras.add("CAMINO"); listaPalabras.add("VALOR");
		listaPalabras.add("MIRADA"); listaPalabras.add("GLORIA"); listaPalabras.add("LIMITE"); listaPalabras.add("AMORES"); listaPalabras.add("VISION");
		listaPalabras.add("SUELOS"); listaPalabras.add("VIAJES"); listaPalabras.add("LEYES"); listaPalabras.add("VALOR"); listaPalabras.add("HIJOS");
		listaPalabras.add("FAMA"); listaPalabras.add("ALTURA"); listaPalabras.add("LIMITE"); listaPalabras.add("OLVIDO"); listaPalabras.add("TESORO");
		listaPalabras.add("BOMBAS"); listaPalabras.add("MUNDOS"); listaPalabras.add("ACTUAL"); listaPalabras.add("TIEMPO"); listaPalabras.add("MANOS");
		listaPalabras.add("CIEGO"); listaPalabras.add("VELAS"); listaPalabras.add("RAZAS"); listaPalabras.add("MUERTE"); listaPalabras.add("ESTADO");
		listaPalabras.add("PERSONA"); listaPalabras.add("CONOCE"); listaPalabras.add("FRIEND"); listaPalabras.add("FRANCIA"); listaPalabras.add("TORERO");
	}
	
	private void ponerTamanoBotonYLetra(){
		if(tamanoSopa == 10){
			tamanoBoton = 70;
			tamanoLetra = 24;
		} else if (tamanoSopa == 15){
			tamanoBoton = 47;
			tamanoLetra = 18;
		} else{
			tamanoBoton = 35;
			tamanoLetra = 8;
		}
	}

	private boolean verSiNoHayOtraPalabra(int largoPalabra, int palabraX, int palabraY, TiposPalabraSopaLetras tipo){
		switch(tipo){
			case HORIZONTAL:
				for (int i = 0; i < largoPalabra; i++) {
					if(tableroLogico[palabraX][palabraY++] != 0){
						return true;
					}
				}
				return false;
			case VERTICAL:
				for (int i = 0; i < largoPalabra; i++) {
					if(tableroLogico[palabraX++][palabraY] != 0){
						return true;
					}
				}
				return false;
			case DIAGONAL:
				for (int i = 0; i < largoPalabra; i++) {
					if(tableroLogico[palabraX++][palabraY++] != 0){
						return true;
					}
				}
				return false;
			default:
				throw new IllegalArgumentException("Tipo no soportado");
		}
	}
	
	private boolean revisarSiCorrecto(String p1, String p2){
		char[] p1Array = new char[p1.length()];
		char[] p2Array = new char[p2.length()];
		
		for (int i = 0; i < p1.length(); i++) {
			p1Array[i] = p1.charAt(i);
		}

		for (int i = 0; i < p2.length(); i++) {
			p2Array[i] = p2.charAt(i);
		}
        Arrays.sort(p1Array);
        Arrays.sort(p2Array);
        return Arrays.equals(p1Array, p2Array);
	}
	
	private void palabraCorrecta(){
		JOptionPane.showMessageDialog(null, "Palabra " + ++palabrasCorrectas + " encontrada", "Respuesta",1);
		for (int i = 0; i < tamanoSopa; i++) {
			for (int j = 0; j < tamanoSopa; j++) {
				JButton boton = tableroGUI[i][j];
				if (boton.getBackground() == Color.blue) {
					boton.setBackground(new Color(75,226,75));
					boton.setEnabled(false);
				}
			}
		}
	}
	
	private void palabraIncorrecta(){
		JOptionPane.showMessageDialog(null, "Mal", "Respuesta",0);
		for (int i = 0; i < tamanoSopa; i++) {
			for (int j = 0; j < tamanoSopa; j++) {
				JButton boton = tableroGUI[i][j];
				if (boton.getBackground() == Color.blue) {
					boton.setBackground(new Color(255,255,255));
				}
			}
		}
	}

	public boolean isJugando() {
		return jugando;
	}
	public boolean isPerdio() {
		return perdio;
	}
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnInsertar;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblPalabra1;
    private javax.swing.JLabel lblPalabra2;
    private javax.swing.JLabel lblPalabra3;
    private javax.swing.JLabel lblPalabra4;
    private javax.swing.JLabel lblTiempo;
    private javax.swing.JPanel pnlSopa;
    // End of variables declaration//GEN-END:variables

	@Override
	public void actionPerformed(ActionEvent evt) {
		JButton button = (JButton)evt.getSource();
		for (int k = 0; k < tamanoSopa; k++) {
			for (int l = 0; l < tamanoSopa; l++) {
				if (button == tableroGUI[k][l]) {
					buscandoPalabra += button.getText();
					tableroGUI[k][l].setBackground(Color.blue);
				}
			}
		}
	}
}
